/*
import handlers.init;
import handlers.uart_irq_handler;
import resources.uart;
import tasks.icu_manager;

*/
/*
import service_libraries.pus_services.pus_service17;
import service_libraries.pus_services.pus_service19;
import service_libraries.pus_services.pus_service1;
import service_libraries.pus_services.pus_service3;
import service_libraries.pus_services.pus_service5;
import tasks.hkfdirmng;
import tasks.tc_rx;
import tasks.tm_channel;
import tasks.bkgtcexec;
import service_libraries.tc_ccsds_pus_format;
import handlers.init;
import resources.uart;
import service_libraries.queue_u8;
import service_libraries.event_list;
import resources.system_data_pool;
import tasks.icu_manager;
*/
import service_libraries.pus_services.pus_service1;
import service_libraries.pus_services.pus_service2;
import service_libraries.pus_services.pus_service3;
import service_libraries.pus_services.pus_service5;
import service_libraries.pus_services.pus_service9;
import service_libraries.pus_services.pus_service12;
import service_libraries.pus_services.pus_service17;
import service_libraries.pus_services.pus_service19;



emitter hk_fdir_timer : PeriodicTimer = {
    period = {tv_sec = 1 : u32, tv_usec = 0 : u32} : TimeVal
} : PeriodicTimer;

resource system_data_pool : AtomicArray<u16; SDP_num_params>;
/*
resource uart_drv : UARTDriver = {
    rem_bytes = false,
    registers @ 0xFC001000,
    uart_queue = {
        elements = [0 ; queue_max_noe],
        head_index = 0,
        num_elements = 0
    }: QueueU8
} : UARTDriver;

handler init : Init = {
    uart <-> uart_drv,
    system_data_pool <-> system_data_pool,
    system_init_ev <- system_init
} : Init;
*/

//channel byte_message_queue : MsgQueue<u8;10>;
//channel tc_message_queue : MsgQueue<box TCDescriptorT;10>;
//channel tm_message_queue : MsgQueue<box TMDescriptorT;10>;

//resource tc_descriptor_pool : Pool<TCDescriptorT; 20>;
/*
task hk_fdir_manager : HK_FDIR_MNG = {
    hk_config_table = {
     {enabled = true, SID = 0, interval = 10, interval_control = 0, num_params = 5, params_def = {0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
     {enabled = false, SID = 10, interval = 3600, interval_control = 0, num_params = 0, params_def = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
     {enabled = false, SID = 100, interval = 1, interval_control = 0, num_params = 0, params_def = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
     {enabled = false, SID = 101, interval = 60, interval_control = 0, num_params = 0, params_def = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
     {enabled = false, SID = 110, interval = 60, interval_control = 0, num_params = 0, params_def = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
     {enabled = false, SID = 5, interval = 1800, interval_control = 0, num_params = 0, params_def = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
     {enabled = false, SID = 6, interval = 1, interval_control = 0, num_params = 0, params_def = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}},
     {enabled = false, SID = 7, interval = 1, interval_control = 0, num_params = 0, params_def = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
    }
} : HK_FDIR_MNG;
*/



/*
task tc_rx_bottom_half_task : TCRXBottomHalfTask = {
    rx_status = RXStatus::SyncBytesRx,
    sync_word = {0xBE, 0xBA, 0xBE, 0xEF},
    aux_index = 0,
    RX_tc_length = {0, 0},
    telecommand = {tc_bytes = [0; max_tc_size], tc_num_bytes = 0},
    byte_message_queue_input <- byte_message_queue,
    tc_message_queue_output -> tc_message_queue,
    a_tc_descriptor_pool <-> tc_descriptor_pool
} : TCRXBottomHalfTask;

task icu_manager : ICUManagerTask = {
    hk_timer = hk_timer,
    tc_rx_bottom_half_task = tc_rx_bottom_half_task,
    byte_message_queue_output -> byte_message_queue,
    tc_message_queue_input <- tc_message_queue,
    a_tc_descriptor_pool <-> tc_descriptor_pool
} : ICUManagerTask;
*/




