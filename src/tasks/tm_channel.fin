import resources.uart;
import service_libraries.tm_ccsds_pus_format;

interface TMChannelIface {

    procedure send_tm(&priv self, tm_descriptor: box TMDescriptorT, result : &mut Result);

};


resource class TMChannel provides TMChannelIface {

    uart : access CharDevSend;
    a_tm_descriptor_pool : access Allocator<TMDescriptorT>;

    
   procedure send_tm(&priv self, tm_descriptor: box TMDescriptorT, result : &mut Result) {

        var queue_state : CharDevResult = CharDevResult::Success;

        self->uart.send(&(tm_descriptor.tm_bytes), tm_descriptor.tm_num_bytes, &mut queue_state);

        if (queue_state is CharDevResult::Success) {

            *result = Result :: Ok;
                    
        } else {

            *result = Result :: Error;
            
        }

        self->a_tm_descriptor_pool.free(tm_descriptor);

        return res;
   }

         

   
   };