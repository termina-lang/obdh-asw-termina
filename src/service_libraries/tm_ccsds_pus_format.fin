import service_libraries.serialize;
import resources.uart;

constexpr max_send_size : usize = 256;

struct CCSDSPUSTMPacketHeaderT {

    packet_id : u16;
    packet_seq_ctrl : u16;
    packet_length : u16;

};


struct CCSDSPUSTMDFHeaderT {

	version : u8;
	type : u8;
	subtype : u8;
	msg_type_counter : u16;
	destinationID : u16;
	obt_secs : u32;
	obt_finetime : u16;

};



 struct TMDescriptorT {

    tm_bytes : [u8 ; max_send_size];
    tm_num_bytes : usize;

};




function ccsds_pus_tm_build_packet_id(apid : u16) -> u16 {
	
	return (((1 : u16 << 11 : u16) | ((apid) & 0x07FF : u16)));

}


function ccsds_pus_tm_build_packet_seq_ctrl(sequence_flags : u16, tm_count : u16) -> u16 {

	return ((sequence_flags << 14 : u16) | tm_count);
}



function ccsds_pus_tm_build_df_header(service_type : u8,service_subtype : u8,destinationID : u8) -> u32 {

	return (0x10 : u32 << 24 : u32)| (service_type as u32 << 16 : u32) | (service_subtype as u32 << 8 : u32) | destinationID as u32;

}
 

function ccsds_pus_tm_build_df_header_version(version : u8) -> u8 {
	
	return (((version) & 0x7 : u8) << 4 : u8);
} 


function ccsds_pus_tm_set_fields(tm_bytes : &mut[u8 ; 10],
		p_tm_packet_header : &CCSDSPUSTMPacketHeaderT,
		p_tm_df_header : &CCSDSPUSTMDFHeaderT) {

	serialize_uint16(p_tm_packet_header->packet_id, &mut(*tm_bytes)[0 : usize .. 2 : usize]);

	//Serialize Packet Sequence Control from packet_seq_ctrl
	serialize_uint16(p_tm_packet_header->packet_seq_ctrl, &mut(*tm_bytes)[2 : usize .. 4 : usize]);

	//Serialize Packet Length from packet_length
	serialize_uint16(p_tm_packet_header->packet_length, &mut(*tm_bytes)[4 : usize .. 6 : usize]);

	// Store version field into the corresponding byte
	(*tm_bytes)[6 : usize] = p_tm_df_header->version;

	//Store the remaining fields into their respective locations
	(*tm_bytes)[7 : usize] = p_tm_df_header->type;
	(*tm_bytes)[8 : usize] = p_tm_df_header->subtype;
	serialize_uint16(p_tm_df_header->msg_type_counter, &mut(*tm_bytes)[9 : usize .. 11 : usize]);
	serialize_uint16(p_tm_df_header->destinationID, &mut(*tm_bytes)[11 : usize .. 13 : usize]);
	serialize_uint32(p_tm_df_header->obt_secs, &mut(*tm_bytes)[13 : usize .. 17 : usize]);
	serialize_uint16(p_tm_df_header->obt_finetime, &mut(*tm_bytes)[17 : usize .. 19 : usize]);
	
	return;

}









