/*
PUS SERVICE 17 : TEST
*/

import service_libraries.tm_ccsds_pus_format;
import service_libraries.tc_ccsds_pus_format;


function build_tm_17_2(p_tm_handler : &mut TMHandlerT,
					tm_seq_counter : u16, result : &mut Result) {

    startup_tm(p_tm_handler);
	close_tm(p_tm_handler, 17, 2, tm_seq_counter, result);
	return;
}

interface PUSS17Iface {
	procedure exec17_1TC(&mut self, tc_handler : &TCHandlerT, result : &mut Result);
};

resource class PUSService17 provides PUSS17Iface {

	tm_channel: access TMChannelIface;   
    a_tm_handler_pool : access Allocator<TMHandlerT>;
    tm_counter : access TMCounterIface;

	procedure exec17_1TC(&mut self, tc_handler : &TCHandlerT, result : &mut Result) {

		var subtype : u8 = tc_handler->df_header.subtype;
		
		if (subtype == 1){

			var tm_handler : Option<box TMHandlerT> = None;
			self->a_tm_handler_pool.alloc(&mut tm_handler);

			match tm_handler {

				case Some(b_tm_handler) => {

					var tm_count : u16 = 0 : u16;
					self->tm_counter.get_next_tm_count(&mut tm_count);
					build_tm_17_2(&mut b_tm_handler, tm_count, result);
					self->tm_channel.send_tm(b_tm_handler, result);
				} 
				case None => {
					*result = Result::Error;
				}
			}
		}

    	return;
	}

};



