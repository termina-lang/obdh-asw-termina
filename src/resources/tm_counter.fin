/**
 * @file tm_counter.fin
 * @brief Interface and implementation for a telemetry packet counter (14-bit).
 */



/**
 * @interface TMCounterIface
 * @brief Interface for a telemetry counter component.
 */
interface TMCounterIface {
    procedure get_next_tm_count(&mut self, count : &mut u16);
};


/**
 * @class TMCounter
 * @brief Resource class that implements a 14-bit telemetry packet counter.
 *
 * This counter wraps around at 16384 (2^14). It is used for assigning sequence counts
 * to telemetry packets as required by standards such as CCSDS.
 */
resource class TMCounter provides TMCounterIface {

    /**
     * @brief Internal counter value, modulo 2^14.
     */
    tm_count : u16;

    /**
     * @brief Gets the current telemetry count and increments it.
     *
     * The counter is incremented modulo 2^14 (i.e., 0x3FFF) after each call.
     * This ensures it stays within 14 bits as specified by CCSDS standards.
     *
     * @param[out] count The current counter value before incrementing.
     */
    procedure get_next_tm_count(&mut self, count : &mut u16) {

        *count = self->tm_count;
        self->tm_count = (self->tm_count + 1 : u16) & 0x3FFF : u16;

        return;
    }
};