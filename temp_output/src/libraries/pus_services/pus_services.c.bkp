
#include "service_libraries/pus_services/pus_services.h"

void PUS_prio_exec_tc(const TCDescriptorT * tc_descriptor,
                      TMDescriptorT * tm_descriptor, uint16_t tm_seq_counter) {
    
    uint8_t tc_type = get_type(tc_descriptor->tc_bytes);

    if (tc_type == 17) {
        
        PUS_service_17_execTC(tc_descriptor, tm_descriptor, tm_seq_counter);

    }

    return;

}

void PUS_hk_fdir_exec_tc(const TCDescriptorT * tc_descriptor,
                         TMDescriptorT * tm_descriptor, uint16_t tm_seq_counter,
                         HKConfiguration hk_config_table[max_num_of_SIDs]) {
    
    uint8_t tc_type = get_type(tc_descriptor->tc_bytes);

    if (tc_type == 3) {
        
        PUS_service_3_execTC(tc_descriptor, tm_descriptor, tm_seq_counter,
                             hk_config_table);

    }

    return;

}
